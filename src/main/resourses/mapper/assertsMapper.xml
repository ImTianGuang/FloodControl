<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tian.cloud.service.dao.mapper.AssertsMapper" >
    <resultMap id="BaseResultMap" type="com.tian.cloud.service.dao.entity.Asserts" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="company_id" property="companyId" jdbcType="INTEGER" />
        <result column="asserts_type_id" property="assertsTypeId" jdbcType="INTEGER" />
        <result column="asserts_type_name" property="assertsTypeName" jdbcType="VARCHAR" />
        <result column="asserts_value" property="assertsValue" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="BIGINT" />
        <result column="update_time" property="updateTime" jdbcType="BIGINT" />
    </resultMap>

    <sql id="Base_Column_List" >
        id, company_id, asserts_type_id, asserts_type_name, asserts_value, status, create_time, update_time
    </sql>

    <select id="getByCompany" parameterType="Object" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from asserts
        where
        company_id = #{companyId} and status = 1
    </select>
    <insert id="insertBatch" parameterType="list" useGeneratedKeys="true" keyProperty="id">
        insert into asserts
        (company_id, asserts_type_id, asserts_type_name, asserts_value, status, create_time, update_time)
        values
        <foreach collection="assertsList" item="asserts" separator=",">
            (#{asserts.companyId},#{asserts.assertsTypeId},#{asserts.assertsTypeName},#{asserts.assertsValue},#{asserts.status},#{asserts.createTime},#{asserts.updateTime})
        </foreach>
    </insert>

    <update id="update" parameterType="Object">
        update asserts
        set
        company_id = #{companyId},
        asserts_type_id = #{assertsTypeId},
        asserts_type_name = #{assertsTypeName},
        asserts_value = #{assertsValue},
        status = #{status},
        update_time = #{updateTime}
        where
        id = #{id}
    </update>
</mapper>